name: Bundle and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  bundle-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML requests

      - name: Process components and create bundle
        env:
          GITHUB_TOKEN: ${{ secrets.ACCOUNT_TOKEN }}
        run: |
          python .github/scripts/process_components.py

      - name: Generate release name and tag
        id: release_info
        run: |
          YEAR=$(date +%Y)
          WEEK=$(date +%V)
          DAY_OF_WEEK=$(date +%u)
          DAILY_COUNT=$(git rev-list --count --since="midnight" HEAD)
          RELEASE_IN_WEEK=$((($DAY_OF_WEEK - 1) * 100 + $DAILY_COUNT))
          RELEASE_NAME="${YEAR}.${WEEK}.${RELEASE_IN_WEEK}"
          echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=v${RELEASE_NAME}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_info.outputs.TAG_NAME }}
          release_name: Release ${{ steps.release_info.outputs.RELEASE_NAME }}
          draft: false
          prerelease: false

      - name: Upload Bundle to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bundle.zip
          asset_name: bundle.zip
          asset_content_type: application/zip

      - name: Upload Individual Files to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in release_files/*; do
            filename=$(basename "$file")
            curl -X POST \
                 -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Content-Type: $(file -b --mime-type "$file")" \
                 -H "Accept: application/vnd.github.v3+json" \
                 --data-binary @"$file" \
                 "${{ steps.create_release.outputs.upload_url }}?name=$filename"
           done
